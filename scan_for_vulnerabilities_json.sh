# start the process of looking for common vulnerabilities.

# step 1 download data from NIST
echo Download vulnerability data from NIST
./download_xml_json.sh
# If an error, then send a message out that the download failed

# NOT NEED ON DOCKER IMAGE AND source COMMAND NOT FOUND ON DOCKER IMAGE
echo Setting up python environment
## Step 2 prepare a local python environment 
#python -m virtualenv env
#source./env/bin/activate

output=./CVE_Results/${BUILD_NUMBER}
mkdir -p ${output}

echo Checking Spacecom2
# Step 3 check the spacecom2 project for CVE issues, store the results in a file in the ./spacecom2 directory
./check_spacecom2_json.sh  >  ${output}/spacecom2.xml

echo Checking Spacecomlite
# Step 4 check the spacecomlite project for CVE issues, store the results in a file in the ./spacecomlite directory
./check_spacecomlite_json.sh  >  ${output}/spacecomlite.xml

#echo Checking DoseTrac and DoseLink vulnerabilities
## Step 5 check the dosetrack project for CVE issues, store the results in a file in the ./dosetraclink directory
#./check_dosetrack_json.sh >  ${output}/dosetraclink_`date +%F_%T`.xml

echo Checking Comsystem3
## Step 6 check the comsystem3 project for CVE issues, store the results in a file in the ./com3 directory
./check_com3_json.sh  >  ${output}/com3.xml


# end

exit
